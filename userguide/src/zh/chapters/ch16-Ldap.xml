<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "../../../target/docbook-tool-1.0/docbook-xml/docbookx.dtd">

<chapter id="chapter_ldap">
    <title>集成LDAP</title>

    <para>
		企业通常已经在LDAP系统各种保存了用户和群组信息。
		自从5.14版本开始，Activiti提供了一种解决方案，
		通过简单的配置就可以告知activiti如何连接LDAP。
    </para>

    <para>
		在Activiti 5.14之前，Activiti就已经可以集成LDAP了。
		然后，5.14的配置简单了很多。
		不过，配置LDAP的“老”办法依然有效。更确切的说，
		简化的配置其实是基于“老”方法的封装。
    </para>

    <section id="ldap_usage">

        <title>用法</title>

        <para>
			要想在你的项目中集成LDAP，
			在pom.xml中添加如下依赖：
            <programlisting>
&lt;dependency&gt;
  &lt;groupId&gt;org.activiti&lt;/groupId&gt;
  &lt;artifactId&gt;activiti-ldap&lt;/artifactId&gt;
  &lt;version&gt;latest.version&lt;/version&gt;
&lt;/dependency&gt;
            </programlisting>
        </para>

    </section>

    <section id="ldap_usecases">

        <title>用例</title>

        <para>
			集成LDAP目前有两大用例：
            <itemizedlist>
                <listitem>
                    <para>
						通过IdentityService进行认证。比如，使用Activiti Explorer
						通过LDAP登录。
                    </para>
                </listitem>
                <listitem>
                    <para>
						获得用户的组。这在查询用户可以看到哪些任务时非常重要。
						（比如，任务分配给一个候选组）。
                    </para>
                </listitem>
            </itemizedlist>
        </para>

    </section>

    <section id="ldap_configuration">

        <title>配置</title>

        <para>
			集成LDAP是通过向流程引擎配置章节中的<literal>configurators</literal>注入
			<literal>org.activiti.ldap.LDAPConfigurator</literal>的实例来实现的。
			这个类是高度可扩展的：
			如果默认的实现不符合用例的话，
			可以很容易的重写方法，很多依赖的bean都是可插拔的。
        </para>

        <para>
			这时一个实例配置（注意：当然，
			通过代码创建引擎时，是非常简单的）。
			现在不用担心所有参数，我们会在下一章详细讨论。
            <programlisting>
    &lt;bean id=&quot;processEngineConfiguration&quot; class=&quot;...SomeProcessEngineConfigurationClass&quot;&gt;
        ...
        &lt;property name=&quot;configurators&quot;&gt;
          &lt;list&gt;
              &lt;bean class=&quot;org.activiti.ldap.LDAPConfigurator&quot;&gt;

                &lt;!-- Server connection params --&gt;
                &lt;property name=&quot;server&quot; value=&quot;ldap://localhost&quot; /&gt;
                &lt;property name=&quot;port&quot; value=&quot;33389&quot; /&gt;
                &lt;property name=&quot;user&quot; value=&quot;uid=admin, ou=users, o=activiti&quot; /&gt;
                &lt;property name=&quot;password&quot; value=&quot;pass&quot; /&gt;

                &lt;!-- Query params --&gt;
                &lt;property name=&quot;baseDn&quot; value=&quot;o=activiti&quot; /&gt;
                &lt;property name=&quot;queryUserByUserId&quot; value=&quot;(&amp;(objectClass=inetOrgPerson)(uid={0}))&quot; /&gt;
                &lt;property name=&quot;queryUserByFullNameLike&quot; value=&quot;(&amp;(objectClass=inetOrgPerson)(|({0}=*{1}*)({2}=*{3}*)))&quot; /&gt;
                &lt;property name=&quot;queryGroupsForUser&quot; value=&quot;(&amp;(objectClass=groupOfUniqueNames)(uniqueMember={0}))&quot; /&gt;

                &lt;!-- Attribute config --&gt;
                &lt;property name=&quot;userIdAttribute&quot; value=&quot;uid&quot; /&gt;
                &lt;property name=&quot;userFirstNameAttribute&quot; value=&quot;cn&quot; /&gt;
                &lt;property name=&quot;userLastNameAttribute&quot; value=&quot;sn&quot; /&gt;

                &lt;property name=&quot;groupIdAttribute&quot; value=&quot;cn&quot; /&gt;
                &lt;property name=&quot;groupNameAttribute&quot; value=&quot;cn&quot; /&gt;

              &lt;/bean&gt;
          &lt;/list&gt;
        &lt;/property&gt;
    &lt;/bean&gt;
            </programlisting>
        </para>

    </section>

    <section id="ldap_properties">

        <title>属性</title>

        <para>
			下面是<literal>org.activiti.ldap.LDAPConfigurator</literal>可以配置的属性：
            <table>
                <title>LDAP配置属性</title>
                <tgroup cols='4'>
                    <thead>
                        <row>
                            <entry>属性名</entry>
                            <entry>描述</entry>
                            <entry>类型</entry>
                            <entry>默认值</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>server</entry>
                            <entry>LDAP服务器地址。比如'ldap://localhost:33389'</entry>
                            <entry>String</entry>
                            <entry></entry>
                        </row>
                         <row>
                            <entry>port</entry>
                            <entry>LDAP运行的端口</entry>
                            <entry>int</entry>
                            <entry></entry>
                        </row>
                         <row>
                            <entry>user</entry>
                            <entry>连接LDAP使用的账号</entry>
                            <entry>String</entry>
                            <entry></entry>
                        </row>
                         <row>
                            <entry>password</entry>
                            <entry>连接LDAP使用的密码</entry>
                            <entry>String</entry>
                            <entry></entry>
                        </row>
                         <row>
                            <entry>initialContextFactory</entry>
                            <entry>连接LDAP使用的InitialContextFactory名称</entry>
                            <entry>String</entry>
                            <entry>com.sun.jndi.ldap.LdapCtxFactory</entry>
                        </row>
                         <row>
                            <entry>securityAuthentication</entry>
                            <entry>连接LDAP时设置的'java.naming.security.authentication'属性值</entry>
                            <entry>String</entry>
                            <entry>simple</entry>
                        </row>
                         <row>
                            <entry>customConnectionParameters</entry>
                            <entry>可以设置那些没有对应setter的连接参数。
							参考http://docs.oracle.com/javase/tutorial/jndi/ldap/jndi.html中的自定义属性。
							这些属性用来配置连接池，特定的安全设置，等等。
							所有提供的参数都会用来创建LDAP连接。</entry>
                            <entry>Map&lt;String, String&gt;</entry>
                            <entry></entry>
                        </row>
                         <row>
                            <entry>baseDn</entry>
                            <entry>搜索用户和组的基“显著名称”（DN）</entry>
                            <entry>String</entry>
                            <entry></entry>
                        </row>
                         <row>
                            <entry>userBaseDn</entry>
                            <entry>搜索用户基于的'distinguished name' (DN)。如果没有提供，会使用baseDn（参考上面）</entry>
                            <entry>String</entry>
                            <entry></entry>
                        </row> 
                        <row>
                            <entry>groupBaseDn</entry>
                            <entry>搜索群组基于的'distinguished name' (DN)。如果没有提供，会使用baseDn（参考上面）</entry>
                            <entry>String</entry>
                            <entry></entry>
                        </row>     
                         <row>
                            <entry>searchTimeLimit</entry>
                            <entry>搜索LDAP的超时时间，单位毫秒。</entry>
                            <entry>long</entry>
                            <entry>一小时</entry>
                        </row>
                        <row>
                            <entry>queryUserByUserId</entry>
                            <entry>
							使用用户id搜索用户的查询语句。
							比如：(&amp;(objectClass=inetOrgPerson)(uid={0}))
							这里，LDAP中所有包含'inetOrgPerson'类的
							匹配'uid'属性的值都会返回。
							如例子中所示，{0}会被用户id替换。
							如果只设置一个查询无法满足特定的LDAP设置，
							可以选择使用LDAPQueryBuilder，
							这样就会提供比单纯使用查询增加更多功能。
                            </entry>
                            <entry>string</entry>
                            <entry></entry>
                        </row>
                        <row>
                            <entry>queryUserByFullNameLike</entry>
                            <entry>
							使用全名搜索用户的查询语句。
							比如：(&amp; (objectClass=inetOrgPerson) (|({0}=*{1}*)({2}=*{3}*)) )
							这里，LDAP中所有包含'inetOrgPerson'类的
							匹配first name和last name的值都会返回。
							注意{0}会替换为firstNameAttribute（如上所示），{1}和{3}是搜索内容，
							{2}是lastNameAttribute。
							如果只设置一个查询无法满足特定的LDAP设置，
							可以选择使用LDAPQueryBuilder，
							这样就会提供比单纯使用查询增加更多功能。
                            </entry>
                            <entry>string</entry>
                            <entry></entry>
                        </row>
                         <row>
                            <entry>queryGroupsForUser</entry>
                            <entry>
							使用搜索指定用户的组的查询语句。
							比如：(&amp;(objectClass=groupOfUniqueNames)(uniqueMember={0}))
							这里，LDAP中所有包含'groupOfUniqueNames'类的
							提供的DN（匹配用户的DN）是'uniqueMember'的记录都会返回。
							像例子中演示的那样，{0}会替换为用户id。
							如果只设置一个查询无法满足特定的LDAP设置，
							可以选择使用LDAPQueryBuilder，
							这样就会提供比单纯使用查询增加更多功能。</entry>
                            <entry>string</entry>
                            <entry></entry>
                        </row>
                         <row>
                            <entry>userIdAttribute</entry>
                            <entry>匹配用户id的属性名。
							这个属性用来在查找用户对象时
							关联LDAP对象与Activiti用户对象之间的关系。</entry>
                            <entry>string</entry>
                            <entry></entry>
                        </row>
                         <row>
                            <entry>userFirstNameAttribute</entry>
                            <entry>匹配first name的属性名。
							这个属性用来在查找用户对象时
							关联LDAP对象与Activiti用户对象之间的关系。</entry>
                            <entry>string</entry>
                            <entry></entry>
                        </row>
                         <row>
                            <entry>userLastNameAttribute</entry>
                            <entry>匹配last name的属性名。
							这个属性用来在查找用户对象时
							关联LDAP对象与Activiti用户对象之间的关系。</entry>
                            <entry>string</entry>
                            <entry></entry>
                        </row>
                         <row>
                            <entry>groupIdAttribute</entry>
                            <entry>匹配组id的属性名。
							这个属性用来在查找组对象时
							关联LDAP对象与Activiti组对象之间的关系。</entry>
                            <entry>string</entry>
                            <entry></entry>
                        </row>
                         <row>
                            <entry>groupNameAttribute</entry>
                            <entry>匹配组名的属性名。
							这个属性用来在查找组对象时
							关联LDAP对象与Activiti组对象之间的关系。</entry>
                            <entry>String</entry>
                            <entry></entry>
                        </row>
                        <row>
                            <entry>groupTypeAttribute</entry>
                            <entry>匹配组名的属性类型。
							这个属性用来在查找组对象时
							关联LDAP对象与Activiti组对象之间的关系。</entry>
                            <entry>String</entry>
                            <entry></entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </para>

        <para>
			下列属性用在希望修改默认行为
			或修改组缓存的情况：
            <table>
                <title>高级属性</title>
                <tgroup cols='4'>
                    <thead>
                        <row>
                            <entry>属性名</entry>
                            <entry>描述</entry>
                            <entry>类型</entry>
                            <entry>默认值</entry>
                        </row>
                    </thead>
                    <tbody>
                          <row>
                            <entry>ldapUserManagerFactory</entry>
                            <entry>设置LDAPUserManagerFactory的自定义实例，如果默认实现不满足需求。</entry>
                            <entry>LDAPUserManagerFactory的实例</entry>
                            <entry></entry>
                        </row>
                        <row>
                            <entry>ldapGroupManagerFactory</entry>
                            <entry>设置LDAPGroupManagerFactory的自定义实例，如果默认实现不满足需求。</entry>
                            <entry>LDAPGroupManagerFactory的实例</entry>
                            <entry></entry>
                        </row>
                        <row>
                            <entry>ldapMemberShipManagerFactory</entry>
                            <entry>设置LDAPMembershipManagerFactory的自定义实例，如果默认实现不满足需求。
							注意它不常用，因为正常情况下LDAP会自己管理关联关系。</entry>
                            <entry>LDAPMembershipManagerFactory的实例</entry>
                            <entry></entry>
                        </row>
                        <row>
                            <entry>ldapQueryBuilder</entry>
                            <entry>设置自定义查询构造器，如果默认实现不满足需求。
							LDAPQueryBuilder实例用在LDAPUserManager和LDAPGroupManager中，
							执行对LDAP的查询。
							默认实现会使用配置的queryGroupsForUser和queryUserById属性。</entry>
                            <entry>org.activiti.ldap.LDAPQueryBuilder的实例</entry>
                            <entry></entry>
                        </row>
                        <row>
                            <entry>groupCacheSize</entry>
                            <entry>组缓存的大小。
							这是一个LRU缓存，用来缓存用户的组，
							可以避免每次查询用户的组时，都要访问LDAP。

							如果值小于0，就不会创建缓存。
							默认为-1，所以不会进行缓存。
                            </entry>
                            <entry>int</entry>
                            <entry>-1</entry>
                        </row>
                        <row>
                            <entry>groupCacheExpirationTime</entry>
                            <entry>设置组缓存的过期时间，单位为毫秒。
							当获取特定用户的组时，并且组缓存也启用了，
							组会保存到缓存中，并使用这个属性设置的时间。
							例如，当组在00:00被获取，过期时间为30分钟，
							那么所有在00:30之后进行的查询都不会使用缓存，
							而是再次去LDAP查询。因此，所以在00:00 - 00:30
							进行的查询都会使用缓存。</entry>
                            <entry>long</entry>
                            <entry>1小时</entry>
                        </row>
                    </tbody>
                </tgroup>

            </table>
        </para>
        
        <para>
			注意，在使用活动目录（AD）时：Activiti论坛中的人们反映对于活动目录（AD），
			'InitialDirContext'需要设置为Context.REFERRAL。可以通过上面描述的customConnectionParameters传递。
        </para>
        

    </section>

    <section id="lda-explorer">

        <title>为Explorer集成LDAP</title>

        <para>
            <itemizedlist>
                <listitem>
                    <para>
						把上面的LDAP配置添加到<literal>activiti-standalone-context.xml</literal>中。
                    </para>
                </listitem>
                <listitem>
                    <para>
                        把activiti-ldap jar放到WEB-INF/lib目录下
                    </para>
                </listitem>
                <listitem>
                    <para>
                        删除<literal>demoDataGenerator</literal> bean，因为它会尝试插入数据（集成LDAP不允许这么做）
                    </para>
                </listitem>
                <listitem>
                    <para>
						将下面的配置添加到<literal>activiti-ui.context</literal>的<literal>explorerApp</literal> bean中：
                        <programlisting>
&lt;property name=&quot;adminGroups&quot;&gt;
  &lt;list&gt;
    &lt;value&gt;admin&lt;/value&gt;
  &lt;/list&gt;
  &lt;/property&gt;
  &lt;property name=&quot;userGroups&quot;&gt;
    &lt;list&gt;
      &lt;value&gt;user&lt;/value&gt;
    &lt;/list&gt;
&lt;/property&gt;
                        </programlisting>
						请使用你自己的配置替换其中的值。需要用到的数据是组的id（通过<literal>groupIdAttribute</literal>配置）。
						上述配置会让'admin'组下的所有用户都成为Activiti Explorer的管理员，用户组也一样。
						所有不匹配的组都会当做“分配”组，
						这样任务就可以分配给他们。
                    </para>
                </listitem>
            </itemizedlist>
        </para>

    </section>

</chapter>